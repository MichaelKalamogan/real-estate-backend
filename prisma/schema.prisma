// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PropertyType {
  HDB
  CONDO
  LANDED
}

enum UserType {
  AGENT
  BUYER
  ADMIN
}

model Home {
  id           Int          @id @default(autoincrement())
  address      String
  bedrooms     Int
  bathrooms    Float
  city         String
  listedAt     DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  price        Float
  size         Float
  propertyType PropertyType
  images       Image[]
  UserId       Int
  user         User         @relation(fields: [UserId], references: [id])
  message      Message[]
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  HomeId    Int
  home      Home     @relation(fields: [HomeId], references: [id])
}

model User {
  id            Int       @id @default(autoincrement())
  name          String
  phone         String
  email         String
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  userType      UserType
  homes         Home[]
  buyerMessages Message[] @relation("buyer_messages")
  agentMessages Message[] @relation("agent_messages")
}

model Message {
  id      Int    @id @default(autoincrement())
  message String
  HomeId  Int
  home    Home   @relation(fields: [HomeId], references: [id])
  AgentId Int
  agent   User   @relation("agent_messages", fields: [AgentId], references: [id])
  BuyerId Int
  buyer   User   @relation("buyer_messages", fields: [BuyerId], references: [id])
}
